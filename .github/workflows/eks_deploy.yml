name: Deploy eks cluster

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      destruction:
        description: 'Destroy the cluster'
        required: false
        default: false
        type: boolean


jobs:
  deploy-eks:
    permissions:
      id-token: write
      contents: read
    environment: dev
    env:
      WORKING_DIR: eks-terraform
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "üí° The ${{ github.repository }} repository is being cloned to the runner."
      - uses: actions/checkout@v3
      - name: list files
        run: ls -la
      - uses: cschleiden/replace-tokens@v1
        with:
          files: '["**/*.tf"]'
        env:
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          DYNAMO_TABLE: ${{ secrets.DYNAMO_TABLE }}
          ENV: ${{ vars.ENV }}
          CONSOLE_ROLE_ARN: ${{ secrets.CONSOLE_ROLE_ARN }}
      - uses: hashicorp/setup-terraform@v2
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: ${{ secrets.AWS_ROLE_SESSION_NAME }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: terraform init
        working-directory: ${{ env.WORKING_DIR }}
        run: terraform init
      - name: terraform plan
        working-directory: ${{ env.WORKING_DIR }}
        run: terraform plan -out=plan.out
      - name: Terraform Apply
        if: ${{ github.event.inputs.destruction != 'true' }}
        working-directory: ${{ env.WORKING_DIR }}
        run: terraform apply plan.out
      - name: Terraform Destroy
        working-directory: ${{ env.WORKING_DIR }}
        run: terraform destroy -auto-approve
        if: ${{ github.event.inputs.destruction == 'true' }}
#      - name: remove kms keys with specific aliases using aws cli
#        if: ${{ github.event.inputs.destruction == 'true' }}
#        run: |
#          aws iam delete-instance-profile --instance-profile-name polar-bookstore-jump-host-dev
#          aws kms delete-alias --alias-name alias/eks/polar-eks-dev
#          aws kms delete-alias --alias-name alias/eks/polar-bookstore-eks-dev
#          aws kms schedule-key-deletion --key-id 564f323b-c850-46aa-a5a2-0806b5a47a00 --pending-window-in-days 7
#          aws kms schedule-key-deletion --key-id 8a4e609f-9b5d-4d75-a346-0a49575d6504 --pending-window-in-days 7
      - name: Terraform Output
        working-directory: ${{ env.WORKING_DIR }}
        run: terraform output -json
      - name: configure kubectl
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION
      - name: show auth-map
        run: kubectl describe configmap -n kube-system aws-auth
